<Project Sdk="Microsoft.DotNet.Helix.Sdk" DefaultTargets="Test">

  <!--

    This project file is invoked from the ci.yml file as part of the CI build.
    
    See https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Helix/Sdk/Readme.md 
    for option details.
    
    These values provided are defaults (for public builds), but they can be overridden from the command line 
    by using the /p:Name=Value syntax when calling msbuild.

    To clear a default value from the command line, use /p:Name= or /p:Name=""

    If you want to iterate from your local machine (and avoid waiting for AzDO), you can do so
    by first setting the following environment variables (the values can be anything):

      SET BUILD_SOURCEBRANCH=helix_test
      SET BUILD_REPOSITORY_NAME=dotnet-winforms
      SET SYSTEM_TEAMPROJECT=internal
      SET BUILD_REASON=PullRequest

    Then, to send to the public helix queue, use the following:

      msbuild .\eng\SendToHelix.proj /p:Platform=x64

    Or, to send to the internal helix queue, use the following:

      msbuild .\eng\SendToHelix.proj /p:Platform=x64 /p:Creator= /p:HelixTargetQueues=Windows.10.Amd64 /p:HelixAccessToken=<get this from helix.dot.net>

  -->

  <PropertyGroup>
    <HelixSource>official/winforms</HelixSource> <!-- Change to pr/winforms for PR builds -->
    <HelixType>type/tests</HelixType>
    <HelixTargetQueues>Windows.10.Amd64.Open</HelixTargetQueues> <!-- Change to Windows.10.Amd64 for internal builds. See helix.dot.net for a list of queues -->
    <Creator>winforms</Creator> <!-- Must provide for public builds, must be empty for internal builds -->
    <HelixAccessToken></HelixAccessToken> <!-- Must provide for internal builds, must be empty for public builds -->
    <IncludeDotNetCli>true</IncludeDotNetCli>
    <DotNetCliPackageType>runtime</DotNetCliPackageType>
    <DotNetCliVersion>$(MicrosoftNETCoreAppPackageVersion)</DotNetCliVersion>
    <EnableXUnitReporter>true</EnableXUnitReporter>
    <XUnitPublishTargetFramework>$(TargetFramework)</XUnitPublishTargetFramework>
    <XUnitRuntimeTargetFramework>netcoreapp2.0</XUnitRuntimeTargetFramework>
    <XUnitRunnerVersion>$(XUnitRunnerConsoleVersion)</XUnitRunnerVersion>
    <XUnitArguments></XUnitArguments>
  </PropertyGroup>

  <!-- Specify XUnit test projects here -->
  <ItemGroup>
    <XUnitProject Include="..\src\**\*.Tests.csproj"/>
    <!-- <XUnitProject Include="..\src\**\*.IntegrationTests.csproj"/> -->
  </ItemGroup>

</Project>
